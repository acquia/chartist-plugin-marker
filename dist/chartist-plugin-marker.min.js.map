{"version":3,"sources":["chartist-plugin-marker.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","this","window","document","Chartist","CtMarker","options","extend","defaultOptions","chart","Line","on","data","verticalMarker","seriesName","series","name","chartHeight","svg","height","pointShape","length","indexOf","type","value","y","threshold","triangle","Svg","d","x","axisX","offset","chartPadding","bottom","join","style","element","replace","addClass","classNames","markerPointClass","attr","y1","y2","values","remove","i","len","undefined","x1","projectValue","axisY","left","top","x2","markerLineClass","group","append","markerClass","plugins","ctMarker"],"mappings":"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","file":"chartist-plugin-marker.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist.plugins.ctMarker'] = factory();\n  }\n}(this, function () {\n\n  /**\n   * Chartist.js plugin to display a series of data as vertical markers in a line\n   * chart.\n   *\n   */\n\n  /* global Chartist */\n  (function(window, document, Chartist) {\n    'use strict';\n\n    var CtMarker = function(options) {\n\n      options = Chartist.extend({}, defaultOptions, options);\n\n      return function ctMarker(chart) {\n\n        if (chart instanceof Chartist.Line) {\n\n          chart.on('draw', function (data) {\n\n            var verticalMarker,\n                seriesName = data.series && data.series.name ? data.series.name : null,\n                chartHeight = chart.svg.height(),\n                pointShape = options.pointShape || 'circle';\n\n            if (options.series.length === 0 || options.series.indexOf(seriesName) !== -1) {\n\n              // Move points to bottom of the charts.\n              if (data.type === 'point' && data.value.y > options.threshold) {\n\n                switch (pointShape) {\n\n                  case 'triangle':\n                    var triangle = new Chartist.Svg('path', {\n                      d: ['M',\n                        data.x,\n                        (chartHeight - chart.options.axisX.offset - chart.options.chartPadding.bottom) - 6,\n                        'L',\n                        data.x - 8,\n                        (chartHeight - chart.options.axisX.offset - chart.options.chartPadding.bottom) + 3,\n                        'L',\n                        data.x + 8,\n                        (chartHeight - chart.options.axisX.offset - chart.options.chartPadding.bottom) + 3,\n                        'z'].join(' '),\n                      style: 'fill-opacity: 1'\n                    }, 'ct-area');\n                    data.element.replace(triangle).addClass(options.classNames.markerPointClass);\n                    break;\n\n                  default:\n                    // Alter the existing marker point position to the bottom of the chart.\n                    data.element\n                      .attr({\n                        y1: chartHeight - chart.options.axisX.offset - chart.options.chartPadding.bottom,\n                        y2: chartHeight - chart.options.axisX.offset - chart.options.chartPadding.bottom\n                      })\n                      .addClass(options.classNames.markerPointClass);\n\n                }\n\n\n              }\n              // Convert existing line area to vertical markers.\n              else if (data.type === 'line' && data.values.length) {\n\n                // Remove the original line path.\n                data.element.remove();\n\n                // Iterate over values and create vertical markers.\n                for (var i = 0, len = data.values.length; i < len; i++) {\n\n                  if (data.values[i] !== undefined && data.values[i].y > options.threshold) {\n\n                    // Create vertical marker line.\n                    verticalMarker = Chartist\n                      .Svg('line', {\n                        x1: data.axisX.projectValue(data.values[i].x, i) + chart.options.axisY.offset + chart.options.chartPadding.left,\n                        y1: 0 + chart.options.chartPadding.top,\n                        x2: data.axisX.projectValue(data.values[i].x, i) + chart.options.axisY.offset + chart.options.chartPadding.left,\n                        y2: chartHeight - chart.options.axisX.offset - chart.options.chartPadding.bottom\n                      }, 'ct-line')\n                      .addClass(options.classNames.markerLineClass);\n\n                    // Append vertical markerline to SVG group.\n                    data.group.append(verticalMarker);\n\n                  }\n                }\n\n              }\n              // Remove all other data except grids and labels.\n              else if (data.type !== 'grid' && data.type !== 'label') {\n                data.element.remove();\n              }\n\n              // Add the marker class to the group.\n              data.group.addClass(options.classNames.markerClass);\n\n            }\n          });\n\n        }\n\n      };\n\n    };\n\n    var defaultOptions = {\n      series: [],\n      threshold: 0,\n      classNames: {\n        markerClass: 'ct-marker',\n        markerPointClass: 'ct-marker-point',\n        markerLineClass: 'ct-marker-line'\n      }\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.ctMarker = CtMarker;\n\n  }(window, document, Chartist));\n\n  return Chartist.plugins.ctMarker;\n\n}));\n"]}